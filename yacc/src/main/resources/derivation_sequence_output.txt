LANGUAGE -> {FUNC} {LANGUAGE} 
FUNC -> FUNCTION ID LT {ARGS} GT LCB {STATEMENT} RCB 
ARGS -> ID {ARG} 
ARG -> COMMA ID {ARG} 
ARG -> ε 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {ASSIGNMENT} 
ASSIGNMENT -> VAR ID DEF {VALUE} 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {BLOCK} 
BLOCK -> {FOR-LOOP} 
FOR-LOOP -> FOR {FOR-COND} LCB {STATEMENT} RCB 
FOR-COND -> {ASSIGNMENT} SEMICOLON {VALUE} SEMICOLON {VALUE} 
ASSIGNMENT -> VAR ID DEF {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> ε 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> LE 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> ε 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> DEF 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> ADD 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> DEF 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> ADD 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> ε 
STATEMENT -> ε 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {RETURN} 
RETURN -> RET {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> ε 
STATEMENT -> ε 
LANGUAGE -> {FUNC} {LANGUAGE} 
FUNC -> FUNCTION ID LT {ARGS} GT LCB {STATEMENT} RCB 
ARGS -> ID {ARG} 
ARG -> COMMA ID {ARG} 
ARG -> ε 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {ASSIGNMENT} 
ASSIGNMENT -> VAR ID DEF {VALUE} 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {BLOCK} 
BLOCK -> {IF-ELSE} 
IF-ELSE -> IF {VALUE} LCB {STATEMENT} RCB ELSE LCB {STATEMENT} RCB 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> GT 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {ASSIGNMENT} 
ASSIGNMENT -> VAL ID DEF {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> LSB {VALUE} RSB 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {ASSIGNMENT} 
ASSIGNMENT -> VAL ID DEF {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> LSB {VALUE} RSB 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> DEF 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> LT {ARGS} GT 
ARGS -> ID {ARG} 
ARG -> COMMA ID {ARG} 
ARG -> ε 
STATEMENT -> ε 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {ASSIGNMENT} 
ASSIGNMENT -> VAL ID DEF {VALUE} 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {ASSIGNMENT} 
ASSIGNMENT -> VAL ID DEF {VALUE} 
VALUE -> INT 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> {BINARY-OP} {VALUE} 
BINARY-OP -> DEF 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> LT {ARGS} GT 
ARGS -> ID {ARG} 
ARG -> COMMA ID {ARG} 
ARG -> ε 
STATEMENT -> ε 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {VALUE} 
VALUE -> {CALL} 
CALL -> ID {CALL-ARG} 
CALL-ARG -> LT {ARGS} GT 
ARGS -> ID {ARG} 
ARG -> ε 
STATEMENT -> {EXPRESSION} SEMICOLON {STATEMENT} 
EXPRESSION -> {RETURN} 
RETURN -> RET {VALUE} 
VALUE -> INT 
STATEMENT -> ε 
LANGUAGE -> ε 
